<?xml version="1.0" encoding="UTF-8"?>
<!-- Builder default values for this version -->
<?xml-model href="rng/inspector.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<inspector xmlns="" id="designOS_0">
    <name>Inspector</name>
    <version>0.1</version>
    <owners>
        <owner id="designOS">
            <name>DesignOS</name>
        </owner>
    </owners>
    <description>The rules and procedures that DesignOS must apply to the current
        template.</description>
    <!-- this history was hand-created since designOS can't write its own history if it never launched -->
    <history>
        <insert id="designOS_history_insert_0" change_ids="designOS_0" previous="nil" next="nil" owner="b33791">
            <description>created file</description>
            <date>2015-08-20T19:20:30+01:00</date>
        </insert>
    </history>
    <!-- initialization steps; arithmetic and string operations are not allowed here! 
        parameters can only be passed in but not operated on; boolean params can be used to operate system logic
        but that only allows the user to instantiate or deinstantiate secondary modules (since arrays require arithmetic and don't make sense here -->
    <domain id="designOS_system_0" logics="Boolean">
        <!-- these parameters are arguments passed to Builder on startup -->
        <parameters> </parameters>
        <!-- each of these rules is a constraint on the validity of any design element
            the rules are invoked top to bottom and are ranked from abstract to concrete - they can be nested to restrict their scope 
            the first rules are inherent and cannot be removed; the name is the key; the content is the description pulled from code
            the form of the rules is a Ruby statement that takes the form of if x return true, else execute some code and return false-->
        <rule name="well-formed">template is at least well-formed XML</rule>
        <rule name="schema">template is at least schema compliant</rule>
        <rule name="logged_in">a user is logged in; if not, load registry template</rule>
        <rule name="ownership">user cannot save template if not owner</rule>
        <rule name="view_scope">user cannot view if Component does not have matching keyword</rule>
        <rule name="parameter_types_check">passed in parameter must pass loose type check</rule>
        <rule name="op_time">operations may not take longer than x seconds</rule>
        <rule name="builder_rules">builder must always track x,y,z histories</rule>
        <rule name="can_inspect">all Components must respond to inspection</rule>
    </domain>
</inspector>
